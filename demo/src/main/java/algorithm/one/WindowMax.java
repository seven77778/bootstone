package algorithm.one;

import org.junit.Test;

import java.util.Random;
import java.util.UUID;
import java.util.concurrent.TimeUnit;

/**
 * @author lsh
 * @date 2023/5/19 17:09
 * <p>
 * 给定一个长度为 n 的数组 num 和滑动窗口的大小 size ，找出所有滑动窗口里数值的最大值。
 * <p>
 * 例如，如果输入数组{2,3,4,2,6,2,5,1}及滑动窗口的大小3，那么一共存在6个滑动窗口，他们的最大值分别为{4,4,6,6,6,5}； 针对数组{2,3,4,2,6,2,5,1}的滑动窗口有以下6个： {[2,3,4],2,6,2,5,1}， {2,[3,4,2],6,2,5,1}， {2,3,[4,2,6],2,5,1}， {2,3,4,[2,6,2],5,1}， {2,3,4,2,[6,2,5],1}， {2,3,4,2,6,[2,5,1]}。
 * <p>
 * 窗口大于数组长度或窗口长度为0的时候，返回空。
 * <p>
 * <p>
 * 数据均在10000以内取值
 * eg：
 * 输入：
 * [2,3,4,2,6,2,5,1],3
 * 返回值：
 * [4,4,6,6,6,5]
 */
public class WindowMax {



}
